<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.forbes.dal.mapper.ext.ProductExtMapper" >
  <resultMap id="BaseResultMap"  type="org.forbes.dal.entity.Product" extends="org.forbes.dal.mapper.ProductMapper.BaseResultMap">
  </resultMap>
  <sql id="Base_Column_List" >
    <include refid="org.forbes.dal.mapper.ProductMapper.Base_Column_List" />
  </sql>
    <!--分页查询商品详细信息-->
  <select id="pageProduct" parameterType="org.forbes.comm.model.ProductPageDto" resultType="org.forbes.comm.vo.ProductAttvalueVo">
    SELECT  p.classify_id,
            p.brand_id,
            p.shop_id,
            p.pro_sn,
            p.name,
            p.variety,
            p.thickness,
            p.fineness,
            p.color,
            p.function,
            p.unit_price,
            p.price,
            p.company,
            p.number,
            p.whole_weight,
            p.origin,
            p.deposit,
            p.warehouse,
            p.sales_address,
            p.explaindesc,
            p.good_verify,
            p.quality_verify,
            p.quality_warranty,
            p.bargaining,
            p.extension_margin,
            p.financing_margin,
            p.supplier_delivery,
            p.compensation,
            p.video_inspection,
            p.warehouse_charge,
            p.subsidy,
            p.lightning_invoice,
            p.honest_shop,
            p.on_the_way,
            p.directional,
            p.bidding_price,
            p.spot_listing,
            p.new,
            p.supply_chain,
            p.guarantee_pay,
            p.size,
            p.length,
            p.break_length,
            p.break_elongation,
            p.regain,
            p.crimp_degree,
            p.double_length,
            p.whiteness,
            p.defect,
            p.oil,
            p.sulfur,
            p.burn,
            p.add_time,
            p.state,
            p.stock,
            p.sale_type
            FROM f_product p
    <where>
      <if test="productPageDto.state != null and productPageDto.state != '' and productPageDto.state != 'null'">
        AND p.state=#{productPageDto.state,jdbcType=INTEGER}
      </if>
      <if test="productPageDto.proSn != null and productPageDto.proSn != '' and productPageDto.proSn != 'null'">
        AND p.pro_sn LIKE concat('%',#{productPageDto.proSn,jdbcType=VARCHAR},'%')
      </if>
    </where>
  </select>

</mapper>